# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test-job:
    docker:
      - image: circleci/node:8-browsers
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}
      # run tests!
      - run:
          name: Run Tests
          command: npm test

  build-job:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - run:
          name: Build
          command: npm run build:prod
      - save_cache:
          key: v1-source-{{ checksum "package-lock.json" }}
          paths:
            - dist
            - node_modules
            - package.json

  deploy-docs:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-source-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-source-
      - run:
          name: Build Docs
          command: npm run docs
      - run:
          name: Deploy Docs to Zeit
          command: npm run docs
      - run:
          name: Aliasing Deployment
          command: npm run alias

  publish-job:
    docker:
      - image: circleci/node:9
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-source-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-source-
      - run:
          name: Publish Package
          command: cd dist && npm run semantic-release

workflows:
  version: 2
  test:
    jobs:
      - test-job
      - build-job
        # filters:
        #   branches:
        #     only:
        #       - master
      - deploy-docs:
          requires:
            - test-job
            - build-job
          # filters:
          #   branches:
          #     only:
          #       - master
      - publish-job:
          requires:
            - deploy-docs
          filters:
            branches:
              only:
                - master
